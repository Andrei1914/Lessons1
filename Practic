#2023/09/28 00:00|Домашняя работа по уроку "Условная конструкция. Операторы if, elif, else."
first = int(input('Введите первое число: '))
second = int(input('Введите второе число: '))
third = int(input('Введите третье число: '))
if first == second and first == third:
    print('3')
elif first == second or first == third or second == third:
    print('2')
else:
    print('0')

#Домашняя работа по уроку "Стиль кода часть II. Цикл While."
my_list = [42, 69, 322, 13, 0, 99, -5, 9, 8, 7, -6, 5]
a = 0
while True:
    a += 1
    if my_list[a] < 0:
        break
    elif my_list[a] == 0:
        continue
    else:
        print(my_list[a])
        continue

#2023/09/30 00:00|Домашняя работа по уроку "Цикл for. Элементы списка. Полезные функции в цикле"
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
n = 0
primes = []
not_primes = []
i = 0
for i in range(len(numbers)):
    is_prime = True
    #    k = 0
    n = numbers[i]
    if n < 2:
        print(n, '- не простое и не сложное число')
        continue
    else:
        f = n ** (1 / 2)
        for a in range(2, int(f + 1)):
            if n % a == 0:
                is_prime = False
                break

    if not (is_prime):
        not_primes.append(n)
    else:
        primes.append(n)
is_prime = True  # признак простого числа
print('Простые числа ', primes)
print('Составные числа', not_primes)

#2023/10/01 00:00|Домашняя работа по уроку "Функции в Python.Функция с параметром"

def get_matrix(n, m, value):
    matrix = []
    for i in range(n):
        matrix.append([])
        for j in range(m):
            matrix[i].append(value)
    print(matrix)
    return matrix


n = int(input("Введите количество строк матрицы: "))
m = int(input("Введите количество столбцов матрицы: "))
value = int(input("Ведите значение матрицы: "))
matrix = get_matrix(n, m, value)
if n <= 0:
    print("Задано неверное количество строк:", n)
elif m <=0:
    print("Задано неверное количество столбцов:" ,m)
else:
    print("Матрица:")
    for i in matrix:
        print(*i)
Average_score.update({students_list[2]:  sum(grades[2]) / len(grades[2])})
Average_score.update({students_list[3]:  sum(grades[3]) / len(grades[3])})
Average_score.update({students_list[4]:  sum(grades[4]) / len(grades[4])})
print(Average_score)
